apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-c-green-test-1234
  namespace: target-namespace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-workload-c-green-test-1234
  namespace: target-namespace
---
apiVersion: v1
data:
  config.yaml: Y29udHJvbFBsYW5lOgogIGFkdmFuY2VkOgogICAgZGVmYXVsdEltYWdlUmVnaXN0cnk6ICIiCiAgICBnbG9iYWxNZXRhZGF0YToKICAgICAgYW5ub3RhdGlvbnM6IHt9CiAgICBoZWFkbGVzc1NlcnZpY2U6CiAgICAgIGFubm90YXRpb25zOiB7fQogICAgICBsYWJlbHM6IHt9CiAgICBzZXJ2aWNlQWNjb3VudDoKICAgICAgYW5ub3RhdGlvbnM6IHt9CiAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgaW1hZ2VQdWxsU2VjcmV0czogW10KICAgICAgbGFiZWxzOiB7fQogICAgICBuYW1lOiAiIgogICAgdmlydHVhbFNjaGVkdWxlcjoKICAgICAgZW5hYmxlZDogZmFsc2UKICAgIHdvcmtsb2FkU2VydmljZUFjY291bnQ6CiAgICAgIGFubm90YXRpb25zOiB7fQogICAgICBlbmFibGVkOiB0cnVlCiAgICAgIGltYWdlUHVsbFNlY3JldHM6IFtdCiAgICAgIGxhYmVsczoge30KICAgICAgbmFtZTogIiIKICBiYWNraW5nU3RvcmU6CiAgICBkYXRhYmFzZToKICAgICAgZW1iZWRkZWQ6CiAgICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgZXh0ZXJuYWw6CiAgICAgICAgY2FGaWxlOiAiIgogICAgICAgIGNlcnRGaWxlOiAiIgogICAgICAgIGNvbm5lY3RvcjogIiIKICAgICAgICBkYXRhU291cmNlOiAiIgogICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAga2V5RmlsZTogIiIKICAgIGV0Y2Q6CiAgICAgIGRlcGxveToKICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgIGhlYWRsZXNzU2VydmljZToKICAgICAgICAgIGFubm90YXRpb25zOiB7fQogICAgICAgIHNlcnZpY2U6CiAgICAgICAgICBhbm5vdGF0aW9uczoge30KICAgICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgICBzdGF0ZWZ1bFNldDoKICAgICAgICAgIGFubm90YXRpb25zOiB7fQogICAgICAgICAgZW5hYmxlU2VydmljZUxpbmtzOiB0cnVlCiAgICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgICBlbnY6IFtdCiAgICAgICAgICBleHRyYUFyZ3M6IFtdCiAgICAgICAgICBoaWdoQXZhaWxhYmlsaXR5OgogICAgICAgICAgICByZXBsaWNhczogMQogICAgICAgICAgaW1hZ2U6CiAgICAgICAgICAgIHJlZ2lzdHJ5OiByZWdpc3RyeS5rOHMuaW8KICAgICAgICAgICAgcmVwb3NpdG9yeTogZXRjZAogICAgICAgICAgICB0YWc6IDMuNS4xNy0wCiAgICAgICAgICBpbWFnZVB1bGxQb2xpY3k6ICIiCiAgICAgICAgICBsYWJlbHM6IHt9CiAgICAgICAgICBwZXJzaXN0ZW5jZToKICAgICAgICAgICAgYWRkVm9sdW1lTW91bnRzOiBbXQogICAgICAgICAgICBhZGRWb2x1bWVzOiBbXQogICAgICAgICAgICB2b2x1bWVDbGFpbToKICAgICAgICAgICAgICBhY2Nlc3NNb2RlczoKICAgICAgICAgICAgICAtIFJlYWRXcml0ZU9uY2UKICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgICAgICAgcmV0ZW50aW9uUG9saWN5OiBSZXRhaW4KICAgICAgICAgICAgICBzaXplOiA1R2kKICAgICAgICAgICAgICBzdG9yYWdlQ2xhc3M6ICIiCiAgICAgICAgICAgIHZvbHVtZUNsYWltVGVtcGxhdGVzOiBbXQogICAgICAgICAgcG9kczoKICAgICAgICAgICAgYW5ub3RhdGlvbnM6IHt9CiAgICAgICAgICAgIGxhYmVsczoge30KICAgICAgICAgIHJlc291cmNlczoKICAgICAgICAgICAgcmVxdWVzdHM6CiAgICAgICAgICAgICAgY3B1OiAyMG0KICAgICAgICAgICAgICBtZW1vcnk6IDE1ME1pCiAgICAgICAgICBzY2hlZHVsaW5nOgogICAgICAgICAgICBhZmZpbml0eToge30KICAgICAgICAgICAgbm9kZVNlbGVjdG9yOiB7fQogICAgICAgICAgICBwb2RNYW5hZ2VtZW50UG9saWN5OiBQYXJhbGxlbAogICAgICAgICAgICBwcmlvcml0eUNsYXNzTmFtZTogIiIKICAgICAgICAgICAgdG9sZXJhdGlvbnM6IFtdCiAgICAgICAgICAgIHRvcG9sb2d5U3ByZWFkQ29uc3RyYWludHM6IFtdCiAgICAgICAgICBzZWN1cml0eToKICAgICAgICAgICAgY29udGFpbmVyU2VjdXJpdHlDb250ZXh0OiB7fQogICAgICAgICAgICBwb2RTZWN1cml0eUNvbnRleHQ6IHt9CiAgICAgIGVtYmVkZGVkOgogICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgbWlncmF0ZUZyb21EZXBsb3llZEV0Y2Q6IGZhbHNlCiAgY29yZWRuczoKICAgIGRlcGxveW1lbnQ6CiAgICAgIGFmZmluaXR5OiB7fQogICAgICBhbm5vdGF0aW9uczoge30KICAgICAgaW1hZ2U6ICIiCiAgICAgIGxhYmVsczoge30KICAgICAgbm9kZVNlbGVjdG9yOiB7fQogICAgICBwb2RzOgogICAgICAgIGFubm90YXRpb25zOiB7fQogICAgICAgIGxhYmVsczoge30KICAgICAgcmVwbGljYXM6IDEKICAgICAgcmVzb3VyY2VzOgogICAgICAgIGxpbWl0czoKICAgICAgICAgIGNwdTogMTAwMG0KICAgICAgICAgIG1lbW9yeTogMTcwTWkKICAgICAgICByZXF1ZXN0czoKICAgICAgICAgIGNwdTogMjBtCiAgICAgICAgICBtZW1vcnk6IDY0TWkKICAgICAgdG9sZXJhdGlvbnM6IFtdCiAgICAgIHRvcG9sb2d5U3ByZWFkQ29uc3RyYWludHM6CiAgICAgIC0gbGFiZWxTZWxlY3RvcjoKICAgICAgICAgIG1hdGNoTGFiZWxzOgogICAgICAgICAgICBrOHMtYXBwOiB2Y2x1c3Rlci1rdWJlLWRucwogICAgICAgIG1heFNrZXc6IDEKICAgICAgICB0b3BvbG9neUtleToga3ViZXJuZXRlcy5pby9ob3N0bmFtZQogICAgICAgIHdoZW5VbnNhdGlzZmlhYmxlOiBEb05vdFNjaGVkdWxlCiAgICBlbWJlZGRlZDogZmFsc2UKICAgIGVuYWJsZWQ6IHRydWUKICAgIG92ZXJ3cml0ZUNvbmZpZzogIiIKICAgIG92ZXJ3cml0ZU1hbmlmZXN0czogIiIKICAgIHByaW9yaXR5Q2xhc3NOYW1lOiAiIgogICAgc2VydmljZToKICAgICAgYW5ub3RhdGlvbnM6IHt9CiAgICAgIGxhYmVsczoge30KICAgICAgc3BlYzoKICAgICAgICB0eXBlOiBDbHVzdGVySVAKICBkaXN0cm86CiAgICBrMHM6CiAgICAgIGNvbW1hbmQ6IFtdCiAgICAgIGNvbmZpZzogIiIKICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgZXh0cmFBcmdzOiBbXQogICAgICBpbWFnZToKICAgICAgICByZWdpc3RyeTogZG9ja2VyLmlvCiAgICAgICAgcmVwb3NpdG9yeTogazBzcHJvamVjdC9rMHMKICAgICAgICB0YWc6IHYxLjMwLjExLWswcy4wCiAgICAgIGltYWdlUHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgICAgIHJlc291cmNlczoKICAgICAgICBsaW1pdHM6CiAgICAgICAgICBtZW1vcnk6IDI1Nk1pCiAgICAgICAgcmVxdWVzdHM6CiAgICAgICAgICBjcHU6IDUwbQogICAgICAgICAgbWVtb3J5OiA2NE1pCiAgICAgIHNlY3VyaXR5Q29udGV4dDoge30KICAgIGszczoKICAgICAgY29tbWFuZDogW10KICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICBleHRyYUFyZ3M6IFtdCiAgICAgIGltYWdlOgogICAgICAgIHJlZ2lzdHJ5OiBkb2NrZXIuaW8KICAgICAgICByZXBvc2l0b3J5OiByYW5jaGVyL2szcwogICAgICAgIHRhZzogdjEuMzIuMy1rM3MxCiAgICAgIGltYWdlUHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgICAgIHJlc291cmNlczoKICAgICAgICBsaW1pdHM6CiAgICAgICAgICBtZW1vcnk6IDI1Nk1pCiAgICAgICAgcmVxdWVzdHM6CiAgICAgICAgICBjcHU6IDUwbQogICAgICAgICAgbWVtb3J5OiA2NE1pCiAgICAgIHNlY3VyaXR5Q29udGV4dDoge30KICAgIGs4czoKICAgICAgYXBpU2VydmVyOgogICAgICAgIGNvbW1hbmQ6IFtdCiAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICAgIGV4dHJhQXJnczogW10KICAgICAgICBpbWFnZToKICAgICAgICAgIHJlZ2lzdHJ5OiByZWdpc3RyeS5rOHMuaW8KICAgICAgICAgIHJlcG9zaXRvcnk6IGt1YmUtYXBpc2VydmVyCiAgICAgICAgICB0YWc6IHYxLjMyLjEKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogICAgICBjb250cm9sbGVyTWFuYWdlcjoKICAgICAgICBjb21tYW5kOiBbXQogICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgICBleHRyYUFyZ3M6IFtdCiAgICAgICAgaW1hZ2U6CiAgICAgICAgICByZWdpc3RyeTogcmVnaXN0cnkuazhzLmlvCiAgICAgICAgICByZXBvc2l0b3J5OiBrdWJlLWNvbnRyb2xsZXItbWFuYWdlcgogICAgICAgICAgdGFnOiB2MS4zMi4xCiAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgZW52OiBbXQogICAgICByZXNvdXJjZXM6CiAgICAgICAgbGltaXRzOgogICAgICAgICAgbWVtb3J5OiAyNTZNaQogICAgICAgIHJlcXVlc3RzOgogICAgICAgICAgY3B1OiA1MG0KICAgICAgICAgIG1lbW9yeTogNjRNaQogICAgICBzY2hlZHVsZXI6CiAgICAgICAgY29tbWFuZDogW10KICAgICAgICBleHRyYUFyZ3M6IFtdCiAgICAgICAgaW1hZ2U6CiAgICAgICAgICByZWdpc3RyeTogcmVnaXN0cnkuazhzLmlvCiAgICAgICAgICByZXBvc2l0b3J5OiBrdWJlLXNjaGVkdWxlcgogICAgICAgICAgdGFnOiB2MS4zMi4xCiAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICAgICAgc2VjdXJpdHlDb250ZXh0OiB7fQogICAgICB2ZXJzaW9uOiAiIgogIGluZ3Jlc3M6CiAgICBhbm5vdGF0aW9uczoKICAgICAgbmdpbnguaW5ncmVzcy5rdWJlcm5ldGVzLmlvL2JhY2tlbmQtcHJvdG9jb2w6IEhUVFBTCiAgICAgIG5naW54LmluZ3Jlc3Mua3ViZXJuZXRlcy5pby9zc2wtcGFzc3Rocm91Z2g6ICJ0cnVlIgogICAgICBuZ2lueC5pbmdyZXNzLmt1YmVybmV0ZXMuaW8vc3NsLXJlZGlyZWN0OiAidHJ1ZSIKICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBob3N0OiBhcGkubXljbHVzdGVyLmxvY2FsCiAgICBsYWJlbHM6IHt9CiAgICBwYXRoVHlwZTogSW1wbGVtZW50YXRpb25TcGVjaWZpYwogICAgc3BlYzoKICAgICAgdGxzOiBbXQogIHByb3h5OgogICAgYmluZEFkZHJlc3M6IDAuMC4wLjAKICAgIGV4dHJhU0FOczogW10KICAgIHBvcnQ6IDg0NDMKICBzZXJ2aWNlOgogICAgYW5ub3RhdGlvbnM6IHt9CiAgICBlbmFibGVkOiB0cnVlCiAgICBodHRwc05vZGVQb3J0OiAwCiAgICBrdWJlbGV0Tm9kZVBvcnQ6IDAKICAgIGxhYmVsczoge30KICAgIHNwZWM6CiAgICAgIHR5cGU6IENsdXN0ZXJJUAogIHNlcnZpY2VNb25pdG9yOgogICAgYW5ub3RhdGlvbnM6IHt9CiAgICBlbmFibGVkOiBmYWxzZQogICAgbGFiZWxzOiB7fQogIHN0YXRlZnVsU2V0OgogICAgYW5ub3RhdGlvbnM6IHt9CiAgICBhcmdzOiBbXQogICAgY29tbWFuZDogW10KICAgIGVuYWJsZVNlcnZpY2VMaW5rczogdHJ1ZQogICAgZW52OiBbXQogICAgaGlnaEF2YWlsYWJpbGl0eToKICAgICAgbGVhc2VEdXJhdGlvbjogNjAKICAgICAgcmVuZXdEZWFkbGluZTogNDAKICAgICAgcmVwbGljYXM6IDEKICAgICAgcmV0cnlQZXJpb2Q6IDE1CiAgICBpbWFnZToKICAgICAgcmVnaXN0cnk6IGdoY3IuaW8KICAgICAgcmVwb3NpdG9yeTogbG9mdC1zaC92Y2x1c3Rlci1wcm8KICAgICAgdGFnOiAwLjI0LjAKICAgIGltYWdlUHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgICBsYWJlbHM6IHt9CiAgICBwZXJzaXN0ZW5jZToKICAgICAgYWRkVm9sdW1lTW91bnRzOiBbXQogICAgICBhZGRWb2x1bWVzOiBbXQogICAgICBiaW5hcmllc1ZvbHVtZToKICAgICAgLSBlbXB0eURpcjoge30KICAgICAgICBuYW1lOiBiaW5hcmllcwogICAgICBkYXRhVm9sdW1lOiBbXQogICAgICB2b2x1bWVDbGFpbToKICAgICAgICBhY2Nlc3NNb2RlczoKICAgICAgICAtIFJlYWRXcml0ZU9uY2UKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgcmV0ZW50aW9uUG9saWN5OiBSZXRhaW4KICAgICAgICBzaXplOiA1R2kKICAgICAgICBzdG9yYWdlQ2xhc3M6ICIiCiAgICAgIHZvbHVtZUNsYWltVGVtcGxhdGVzOiBbXQogICAgcG9kczoKICAgICAgYW5ub3RhdGlvbnM6IHt9CiAgICAgIGxhYmVsczoge30KICAgIHByb2JlczoKICAgICAgbGl2ZW5lc3NQcm9iZToKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgIHJlYWRpbmVzc1Byb2JlOgogICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgc3RhcnR1cFByb2JlOgogICAgICAgIGVuYWJsZWQ6IHRydWUKICAgIHJlc291cmNlczoKICAgICAgbGltaXRzOgogICAgICAgIG1lbW9yeTogMkdpCiAgICAgIHJlcXVlc3RzOgogICAgICAgIGNwdTogNTBtCiAgICAgICAgbWVtb3J5OiA1MTJNaQogICAgc2NoZWR1bGluZzoKICAgICAgYWZmaW5pdHk6IHt9CiAgICAgIG5vZGVTZWxlY3Rvcjoge30KICAgICAgcG9kTWFuYWdlbWVudFBvbGljeTogUGFyYWxsZWwKICAgICAgcHJpb3JpdHlDbGFzc05hbWU6ICIiCiAgICAgIHRvbGVyYXRpb25zOiBbXQogICAgICB0b3BvbG9neVNwcmVhZENvbnN0cmFpbnRzOiBbXQogICAgc2VjdXJpdHk6CiAgICAgIGNvbnRhaW5lclNlY3VyaXR5Q29udGV4dDoKICAgICAgICBhbGxvd1ByaXZpbGVnZUVzY2FsYXRpb246IGZhbHNlCiAgICAgIHBvZFNlY3VyaXR5Q29udGV4dDoge30KICAgIHdvcmtpbmdEaXI6ICIiCmV4cGVyaW1lbnRhbDoKICBkZXBsb3k6CiAgICBob3N0OgogICAgICBtYW5pZmVzdHM6ICIiCiAgICAgIG1hbmlmZXN0c1RlbXBsYXRlOiAiIgogICAgdmNsdXN0ZXI6CiAgICAgIGhlbG06IFtdCiAgICAgIG1hbmlmZXN0czogIiIKICAgICAgbWFuaWZlc3RzVGVtcGxhdGU6ICIiCiAgZ2VuZXJpY1N5bmM6CiAgICBjbHVzdGVyUm9sZToKICAgICAgZXh0cmFSdWxlczogW10KICAgIHJvbGU6CiAgICAgIGV4dHJhUnVsZXM6IFtdCiAgaXNvbGF0ZWRDb250cm9sUGxhbmU6CiAgICBoZWFkbGVzczogZmFsc2UKICBtdWx0aU5hbWVzcGFjZU1vZGU6CiAgICBlbmFibGVkOiBmYWxzZQogIHJldXNlTmFtZXNwYWNlOiBmYWxzZQogIHN5bmNTZXR0aW5nczoKICAgIGRpc2FibGVTeW5jOiBmYWxzZQogICAgcmV3cml0ZUt1YmVybmV0ZXNTZXJ2aWNlOiBmYWxzZQogICAgc2V0T3duZXI6IHRydWUKICAgIHRhcmdldE5hbWVzcGFjZTogIiIKZXhwb3J0S3ViZUNvbmZpZzoKICBjb250ZXh0OiAiIgogIGluc2VjdXJlOiBmYWxzZQogIHNlY3JldDoKICAgIG5hbWU6ICIiCiAgICBuYW1lc3BhY2U6ICIiCiAgc2VydmVyOiAiIgogIHNlcnZpY2VBY2NvdW50OgogICAgY2x1c3RlclJvbGU6ICIiCiAgICBuYW1lOiAiIgogICAgbmFtZXNwYWNlOiAiIgpleHRlcm5hbDoge30KaW50ZWdyYXRpb25zOgogIGNlcnRNYW5hZ2VyOgogICAgZW5hYmxlZDogZmFsc2UKICAgIHN5bmM6CiAgICAgIGZyb21Ib3N0OgogICAgICAgIGNsdXN0ZXJJc3N1ZXJzOgogICAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICAgICAgc2VsZWN0b3I6CiAgICAgICAgICAgIGxhYmVsczoge30KICAgICAgdG9Ib3N0OgogICAgICAgIGNlcnRpZmljYXRlczoKICAgICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgICBpc3N1ZXJzOgogICAgICAgICAgZW5hYmxlZDogdHJ1ZQogIGV4dGVybmFsU2VjcmV0czoKICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBzeW5jOgogICAgICBjbHVzdGVyU3RvcmVzOgogICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgc2VsZWN0b3I6CiAgICAgICAgICBsYWJlbHM6IHt9CiAgICAgIGV4dGVybmFsU2VjcmV0czoKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgIHN0b3JlczoKICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgd2ViaG9vazoKICAgICAgZW5hYmxlZDogZmFsc2UKICBrdWJlVmlydDoKICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBzeW5jOgogICAgICBkYXRhVm9sdW1lczoKICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICB2aXJ0dWFsTWFjaGluZUNsb25lczoKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgIHZpcnR1YWxNYWNoaW5lSW5zdGFuY2VNaWdyYXRpb25zOgogICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgdmlydHVhbE1hY2hpbmVJbnN0YW5jZXM6CiAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICB2aXJ0dWFsTWFjaGluZVBvb2xzOgogICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgdmlydHVhbE1hY2hpbmVzOgogICAgICAgIGVuYWJsZWQ6IHRydWUKICAgIHdlYmhvb2s6CiAgICAgIGVuYWJsZWQ6IHRydWUKICBtZXRyaWNzU2VydmVyOgogICAgZW5hYmxlZDogZmFsc2UKICAgIG5vZGVzOiB0cnVlCiAgICBwb2RzOiB0cnVlCm5ldHdvcmtpbmc6CiAgYWR2YW5jZWQ6CiAgICBjbHVzdGVyRG9tYWluOiBjbHVzdGVyLmxvY2FsCiAgICBmYWxsYmFja0hvc3RDbHVzdGVyOiBmYWxzZQogICAgcHJveHlLdWJlbGV0czoKICAgICAgYnlIb3N0bmFtZTogdHJ1ZQogICAgICBieUlQOiB0cnVlCiAgcmVwbGljYXRlU2VydmljZXM6CiAgICBmcm9tSG9zdDogW10KICAgIHRvSG9zdDogW10KICByZXNvbHZlRE5TOiBbXQpwbHVnaW5zOiB7fQpwb2xpY2llczoKICBjZW50cmFsQWRtaXNzaW9uOgogICAgbXV0YXRpbmdXZWJob29rczogW10KICAgIHZhbGlkYXRpbmdXZWJob29rczogW10KICBsaW1pdFJhbmdlOgogICAgYW5ub3RhdGlvbnM6IHt9CiAgICBkZWZhdWx0OgogICAgICBjcHU6ICIxIgogICAgICBlcGhlbWVyYWwtc3RvcmFnZTogOEdpCiAgICAgIG1lbW9yeTogNTEyTWkKICAgIGRlZmF1bHRSZXF1ZXN0OgogICAgICBjcHU6IDEwMG0KICAgICAgZXBoZW1lcmFsLXN0b3JhZ2U6IDNHaQogICAgICBtZW1vcnk6IDEyOE1pCiAgICBlbmFibGVkOiBhdXRvCiAgICBsYWJlbHM6IHt9CiAgICBtYXg6IHt9CiAgICBtaW46IHt9CiAgbmV0d29ya1BvbGljeToKICAgIGFubm90YXRpb25zOiB7fQogICAgZW5hYmxlZDogZmFsc2UKICAgIGZhbGxiYWNrRG5zOiA4LjguOC44CiAgICBsYWJlbHM6IHt9CiAgICBvdXRnb2luZ0Nvbm5lY3Rpb25zOgogICAgICBpcEJsb2NrOgogICAgICAgIGNpZHI6IDAuMC4wLjAvMAogICAgICAgIGV4Y2VwdDoKICAgICAgICAtIDEwMC42NC4wLjAvMTAKICAgICAgICAtIDEyNy4wLjAuMC84CiAgICAgICAgLSAxMC4wLjAuMC84CiAgICAgICAgLSAxNzIuMTYuMC4wLzEyCiAgICAgICAgLSAxOTIuMTY4LjAuMC8xNgogICAgICBwbGF0Zm9ybTogdHJ1ZQogIHJlc291cmNlUXVvdGE6CiAgICBhbm5vdGF0aW9uczoge30KICAgIGVuYWJsZWQ6IGF1dG8KICAgIGxhYmVsczoge30KICAgIHF1b3RhOgogICAgICBjb3VudC9jb25maWdtYXBzOiAxMDAKICAgICAgY291bnQvZW5kcG9pbnRzOiA0MAogICAgICBjb3VudC9wZXJzaXN0ZW50dm9sdW1lY2xhaW1zOiAyMAogICAgICBjb3VudC9wb2RzOiAyMAogICAgICBjb3VudC9zZWNyZXRzOiAxMDAKICAgICAgY291bnQvc2VydmljZXM6IDIwCiAgICAgIGxpbWl0cy5jcHU6IDIwCiAgICAgIGxpbWl0cy5lcGhlbWVyYWwtc3RvcmFnZTogMTYwR2kKICAgICAgbGltaXRzLm1lbW9yeTogNDBHaQogICAgICByZXF1ZXN0cy5jcHU6IDEwCiAgICAgIHJlcXVlc3RzLmVwaGVtZXJhbC1zdG9yYWdlOiA2MEdpCiAgICAgIHJlcXVlc3RzLm1lbW9yeTogMjBHaQogICAgICByZXF1ZXN0cy5zdG9yYWdlOiAxMDBHaQogICAgICBzZXJ2aWNlcy5sb2FkYmFsYW5jZXJzOiAxCiAgICAgIHNlcnZpY2VzLm5vZGVwb3J0czogMAogICAgc2NvcGVTZWxlY3RvcjoKICAgICAgbWF0Y2hFeHByZXNzaW9uczogW10KICAgIHNjb3BlczogW10KcmJhYzoKICBjbHVzdGVyUm9sZToKICAgIGVuYWJsZWQ6IGF1dG8KICAgIGV4dHJhUnVsZXM6IFtdCiAgICBvdmVyd3JpdGVSdWxlczogW10KICByb2xlOgogICAgZW5hYmxlZDogdHJ1ZQogICAgZXh0cmFSdWxlczogW10KICAgIG92ZXJ3cml0ZVJ1bGVzOgogICAgLSBhcGlHcm91cHM6CiAgICAgIC0gIiIKICAgICAgcmVzb3VyY2VzOgogICAgICAtIGNvbmZpZ21hcHMKICAgICAgLSBzZWNyZXRzCiAgICAgIC0gc2VydmljZXMKICAgICAgLSBwb2RzCiAgICAgIC0gcG9kcy9hdHRhY2gKICAgICAgLSBwb2RzL3BvcnRmb3J3YXJkCiAgICAgIC0gcG9kcy9leGVjCiAgICAgIC0gcGVyc2lzdGVudHZvbHVtZWNsYWltcwogICAgICB2ZXJiczoKICAgICAgLSBjcmVhdGUKICAgICAgLSBkZWxldGUKICAgICAgLSBwYXRjaAogICAgICAtIHVwZGF0ZQogICAgICAtIGdldAogICAgICAtIGxpc3QKICAgICAgLSB3YXRjaAogICAgLSBhcGlHcm91cHM6CiAgICAgIC0gYXBwcwogICAgICByZXNvdXJjZXM6CiAgICAgIC0gc3RhdGVmdWxzZXRzCiAgICAgIC0gcmVwbGljYXNldHMKICAgICAgLSBkZXBsb3ltZW50cwogICAgICB2ZXJiczoKICAgICAgLSBnZXQKICAgICAgLSBsaXN0CiAgICAgIC0gd2F0Y2gKICAgIC0gYXBpR3JvdXBzOgogICAgICAtICIiCiAgICAgIHJlc291cmNlczoKICAgICAgLSBlbmRwb2ludHMKICAgICAgdmVyYnM6CiAgICAgIC0gY3JlYXRlCiAgICAgIC0gZGVsZXRlCiAgICAgIC0gcGF0Y2gKICAgICAgLSB1cGRhdGUKICAgIC0gYXBpR3JvdXBzOgogICAgICAtICIiCiAgICAgIHJlc291cmNlczoKICAgICAgLSBlbmRwb2ludHMKICAgICAgLSBldmVudHMKICAgICAgLSBwb2RzL2xvZwogICAgICB2ZXJiczoKICAgICAgLSBnZXQKICAgICAgLSBsaXN0CiAgICAgIC0gd2F0Y2gKICAgIC0gYXBpR3JvdXBzOgogICAgICAtIG5ldHdvcmtpbmcuazhzLmlvCiAgICAgIHJlc291cmNlczoKICAgICAgLSBpbmdyZXNzZXMKICAgICAgdmVyYnM6CiAgICAgIC0gY3JlYXRlCiAgICAgIC0gZGVsZXRlCiAgICAgIC0gcGF0Y2gKICAgICAgLSB1cGRhdGUKICAgICAgLSBnZXQKICAgICAgLSBsaXN0CiAgICAgIC0gd2F0Y2gKc3luYzoKICBmcm9tSG9zdDoKICAgIGNvbmZpZ01hcHM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgIG1hcHBpbmdzOgogICAgICAgIGJ5TmFtZToge30KICAgIGNzaURyaXZlcnM6CiAgICAgIGVuYWJsZWQ6IGF1dG8KICAgIGNzaU5vZGVzOgogICAgICBlbmFibGVkOiBhdXRvCiAgICBjc2lTdG9yYWdlQ2FwYWNpdGllczoKICAgICAgZW5hYmxlZDogYXV0bwogICAgZXZlbnRzOgogICAgICBlbmFibGVkOiB0cnVlCiAgICBpbmdyZXNzQ2xhc3NlczoKICAgICAgZW5hYmxlZDogZmFsc2UKICAgIG5vZGVzOgogICAgICBjbGVhckltYWdlU3RhdHVzOiBmYWxzZQogICAgICBlbmFibGVkOiBmYWxzZQogICAgICBzZWxlY3RvcjoKICAgICAgICBhbGw6IGZhbHNlCiAgICAgICAgbGFiZWxzOiB7fQogICAgICBzeW5jQmFja0NoYW5nZXM6IGZhbHNlCiAgICBwcmlvcml0eUNsYXNzZXM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBydW50aW1lQ2xhc3NlczoKICAgICAgZW5hYmxlZDogZmFsc2UKICAgIHNlY3JldHM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgIG1hcHBpbmdzOgogICAgICAgIGJ5TmFtZToge30KICAgIHN0b3JhZ2VDbGFzc2VzOgogICAgICBlbmFibGVkOiBhdXRvCiAgICB2b2x1bWVTbmFwc2hvdENsYXNzZXM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgdG9Ib3N0OgogICAgY29uZmlnTWFwczoKICAgICAgYWxsOiBmYWxzZQogICAgICBlbmFibGVkOiB0cnVlCiAgICBlbmRwb2ludHM6CiAgICAgIGVuYWJsZWQ6IHRydWUKICAgIGluZ3Jlc3NlczoKICAgICAgZW5hYmxlZDogdHJ1ZQogICAgbmV0d29ya1BvbGljaWVzOgogICAgICBlbmFibGVkOiBmYWxzZQogICAgcGVyc2lzdGVudFZvbHVtZUNsYWltczoKICAgICAgZW5hYmxlZDogdHJ1ZQogICAgcGVyc2lzdGVudFZvbHVtZXM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBwb2REaXNydXB0aW9uQnVkZ2V0czoKICAgICAgZW5hYmxlZDogZmFsc2UKICAgIHBvZHM6CiAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgZW5mb3JjZVRvbGVyYXRpb25zOiBbXQogICAgICBwcmlvcml0eUNsYXNzTmFtZTogIiIKICAgICAgcmV3cml0ZUhvc3RzOgogICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgICBpbml0Q29udGFpbmVyOgogICAgICAgICAgaW1hZ2U6IGxpYnJhcnkvYWxwaW5lOjMuMjAKICAgICAgICAgIHJlc291cmNlczoKICAgICAgICAgICAgbGltaXRzOgogICAgICAgICAgICAgIGNwdTogMzBtCiAgICAgICAgICAgICAgbWVtb3J5OiA2NE1pCiAgICAgICAgICAgIHJlcXVlc3RzOgogICAgICAgICAgICAgIGNwdTogMzBtCiAgICAgICAgICAgICAgbWVtb3J5OiA2NE1pCiAgICAgIHJ1bnRpbWVDbGFzc05hbWU6ICIiCiAgICAgIHRyYW5zbGF0ZUltYWdlOiB7fQogICAgICB1c2VTZWNyZXRzRm9yU0FUb2tlbnM6IGZhbHNlCiAgICBwcmlvcml0eUNsYXNzZXM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBzZWNyZXRzOgogICAgICBhbGw6IGZhbHNlCiAgICAgIGVuYWJsZWQ6IHRydWUKICAgIHNlcnZpY2VBY2NvdW50czoKICAgICAgZW5hYmxlZDogZmFsc2UKICAgIHNlcnZpY2VzOgogICAgICBlbmFibGVkOiB0cnVlCiAgICBzdG9yYWdlQ2xhc3NlczoKICAgICAgZW5hYmxlZDogZmFsc2UKICAgIHZvbHVtZVNuYXBzaG90Q29udGVudHM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICB2b2x1bWVTbmFwc2hvdHM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCnRlbGVtZXRyeToKICBlbmFibGVkOiBmYWxzZQ==
kind: Secret
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-config-c-green-test-1234
  namespace: target-namespace
type: Opaque
---
apiVersion: v1
data:
  coredns.yaml: "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n\
    \  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind:\
    \ ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n\
    \  name: system:coredns\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n\
    \      - endpoints\n      - services\n      - pods\n      - namespaces\n    verbs:\n\
    \      - list\n      - watch\n  - apiGroups:\n      - discovery.k8s.io\n    resources:\n\
    \      - endpointslices\n    verbs:\n      - list\n      - watch\n---\napiVersion:\
    \ rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n\
    \    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping:\
    \ rbac-defaults\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n\
    \  kind: ClusterRole\n  name: system:coredns\nsubjects:\n  - kind: ServiceAccount\n\
    \    name: coredns\n    namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\n\
    metadata:\n  name: coredns\n  namespace: kube-system\ndata:\n  Corefile: |-\n\
    \    .:1053 {\n        errors\n        health\n        ready\n        rewrite\
    \ name regex .*\\.nodes\\.vcluster\\.com kubernetes.default.svc.cluster.local\n\
    \        kubernetes cluster.local in-addr.arpa ip6.arpa {\n            pods insecure\n\
    \            fallthrough in-addr.arpa ip6.arpa\n        }\n        hosts /etc/NodeHosts\
    \ {\n            ttl 60\n            reload 15s\n            fallthrough\n   \
    \     }\n        prometheus :9153\n        forward . /etc/resolv.conf\n      \
    \  cache 30\n        loop\n        loadbalance\n    }\n  \n    import /etc/coredns/custom/*.server\n\
    \  NodeHosts: \"\"\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name:\
    \ coredns\n  namespace: kube-system\n  labels:\n    k8s-app: vcluster-kube-dns\n\
    \    kubernetes.io/name: \"CoreDNS\"\nspec:\n  replicas: 1\n  strategy:\n    type:\
    \ RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n  \
    \  matchLabels:\n      k8s-app: vcluster-kube-dns\n  template:\n    metadata:\n\
    \      labels:\n        k8s-app: vcluster-kube-dns\n    spec:\n      priorityClassName:\
    \ \"\"\n      serviceAccountName: coredns\n      nodeSelector:\n        kubernetes.io/os:\
    \ linux\n      topologySpreadConstraints:\n        - labelSelector:\n        \
    \    matchLabels:\n              k8s-app: vcluster-kube-dns\n          maxSkew:\
    \ 1\n          topologyKey: kubernetes.io/hostname\n          whenUnsatisfiable:\
    \ DoNotSchedule\n      containers:\n        - name: coredns\n          image:\
    \ {{.IMAGE}}\n          imagePullPolicy: IfNotPresent\n          resources:\n\
    \            limits:\n              cpu: 1000m\n              memory: 170Mi\n\
    \            requests:\n              cpu: 20m\n              memory: 64Mi\n \
    \         args: [ \"-conf\", \"/etc/coredns/Corefile\" ]\n          volumeMounts:\n\
    \            - name: config-volume\n              mountPath: /etc/coredns\n  \
    \            readOnly: true\n            - name: custom-config-volume\n      \
    \        mountPath: /etc/coredns/custom\n              readOnly: true\n      \
    \    securityContext:\n            runAsNonRoot: true\n            runAsUser:\
    \ {{.RUN_AS_USER}}\n            runAsGroup: {{.RUN_AS_GROUP}}\n            allowPrivilegeEscalation:\
    \ false\n            capabilities:\n              add:\n                - NET_BIND_SERVICE\n\
    \              drop:\n                - ALL\n            readOnlyRootFilesystem:\
    \ true\n          livenessProbe:\n            httpGet:\n              path: /health\n\
    \              port: 8080\n              scheme: HTTP\n            initialDelaySeconds:\
    \ 60\n            periodSeconds: 10\n            timeoutSeconds: 1\n         \
    \   successThreshold: 1\n            failureThreshold: 3\n          readinessProbe:\n\
    \            httpGet:\n              path: /ready\n              port: 8181\n\
    \              scheme: HTTP\n            initialDelaySeconds: 0\n            periodSeconds:\
    \ 2\n            timeoutSeconds: 1\n            successThreshold: 1\n        \
    \    failureThreshold: 3\n      dnsPolicy: Default\n      volumes:\n        -\
    \ name: config-volume\n          configMap:\n            name: coredns\n     \
    \       items:\n              - key: Corefile\n                path: Corefile\n\
    \              - key: NodeHosts\n                path: NodeHosts\n        - name:\
    \ custom-config-volume\n          configMap:\n            name: coredns-custom\n\
    \            optional: true\n---\napiVersion: v1\nkind: Service\nmetadata:\n \
    \ name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io/port:\
    \ \"9153\"\n    prometheus.io/scrape: \"true\"\n  labels:\n    k8s-app: vcluster-kube-dns\n\
    \    kubernetes.io/cluster-service: \"true\"\n    kubernetes.io/name: \"CoreDNS\"\
    \nspec:\n  type: ClusterIP\n  selector:\n    k8s-app: vcluster-kube-dns\n  ports:\n\
    \    - name: dns\n      port: 53\n      targetPort: 1053\n      protocol: UDP\n\
    \    - name: dns-tcp\n      port: 53\n      targetPort: 1053\n      protocol:\
    \ TCP\n    - name: metrics\n      port: 9153\n      protocol: TCP"
kind: ConfigMap
metadata:
  name: vc-coredns-c-green-test-1234
  namespace: target-namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-c-green-test-1234
  namespace: target-namespace
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
      - secrets
      - services
      - pods
      - pods/attach
      - pods/portforward
      - pods/exec
      - persistentvolumeclaims
    verbs:
      - create
      - delete
      - patch
      - update
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - replicasets
      - deployments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - endpoints
    verbs:
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - ''
    resources:
      - endpoints
      - events
      - pods/log
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - patch
      - update
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-c-green-test-1234
  namespace: target-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vc-c-green-test-1234
subjects:
  - kind: ServiceAccount
    name: vc-c-green-test-1234
    namespace: target-namespace
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: c-green-test-1234-headless
  namespace: target-namespace
spec:
  clusterIP: None
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
  publishNotReadyAddresses: true
  selector:
    app: vcluster
    release: c-green-test-1234
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
    vcluster.loft.sh/service: 'true'
  name: c-green-test-1234
  namespace: target-namespace
spec:
  ports:
    - name: https
      nodePort: 0
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: kubelet
      nodePort: 0
      port: 10250
      protocol: TCP
      targetPort: 8443
  selector:
    app: vcluster
    release: c-green-test-1234
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: c-green-test-1234
  namespace: target-namespace
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: vcluster
      release: c-green-test-1234
  serviceName: c-green-test-1234-headless
  template:
    metadata:
      annotations:
        vClusterConfigHash: c15b19925ff7212925c1352daea5547553ba6fa642f875c62a945fc014442ef0
      labels:
        app: vcluster
        release: c-green-test-1234
    spec:
      containers:
        - env:
            - name: VCLUSTER_NAME
              value: c-green-test-1234
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: ghcr.io/loft-sh/vcluster-pro:0.24.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 2
            timeoutSeconds: 3
          name: syncer
          readinessProbe:
            failureThreshold: 60
            httpGet:
              path: /readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 50m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          startupProbe:
            failureThreshold: 300
            httpGet:
              path: /readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 6
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /binaries
              name: binaries
            - mountPath: /pki
              name: certs
            - mountPath: /.cache/helm
              name: helm-cache
            - mountPath: /etc/rancher
              name: k3s-config
            - mountPath: /var/vcluster
              name: vcluster-config
            - mountPath: /tmp
              name: tmp
            - mountPath: /manifests/coredns
              name: coredns
              readOnly: true
      enableServiceLinks: true
      initContainers:
        - args:
            - -c
            - cp /bin/k3s /binaries/k3s
          command:
            - /bin/sh
          image: docker.io/rancher/k3s:v1.32.3-k3s1
          imagePullPolicy: IfNotPresent
          name: vcluster
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext: {}
          volumeMounts:
            - mountPath: /binaries
              name: binaries
      serviceAccountName: vc-c-green-test-1234
      terminationGracePeriodSeconds: 10
      volumes:
        - emptyDir: {}
          name: helm-cache
        - emptyDir: {}
          name: binaries
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: certs
        - emptyDir: {}
          name: k3s-config
        - name: vcluster-config
          secret:
            secretName: vc-config-c-green-test-1234
        - configMap:
            name: vc-coredns-c-green-test-1234
          name: coredns
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
