apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-c-green-test-1234
  namespace: target-namespace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-workload-c-green-test-1234
  namespace: target-namespace
---
apiVersion: v1
data:
  config.yaml: Y29udHJvbFBsYW5lOgogIGFkdmFuY2VkOgogICAgZGVmYXVsdEltYWdlUmVnaXN0cnk6ICIiCiAgICBnbG9iYWxNZXRhZGF0YToKICAgICAgYW5ub3RhdGlvbnM6IHt9CiAgICBoZWFkbGVzc1NlcnZpY2U6CiAgICAgIGFubm90YXRpb25zOiB7fQogICAgICBsYWJlbHM6IHt9CiAgICBzZXJ2aWNlQWNjb3VudDoKICAgICAgYW5ub3RhdGlvbnM6IHt9CiAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgaW1hZ2VQdWxsU2VjcmV0czogW10KICAgICAgbGFiZWxzOiB7fQogICAgICBuYW1lOiAiIgogICAgdmlydHVhbFNjaGVkdWxlcjoKICAgICAgZW5hYmxlZDogZmFsc2UKICAgIHdvcmtsb2FkU2VydmljZUFjY291bnQ6CiAgICAgIGFubm90YXRpb25zOiB7fQogICAgICBlbmFibGVkOiB0cnVlCiAgICAgIGltYWdlUHVsbFNlY3JldHM6IFtdCiAgICAgIGxhYmVsczoge30KICAgICAgbmFtZTogIiIKICBiYWNraW5nU3RvcmU6CiAgICBkYXRhYmFzZToKICAgICAgZW1iZWRkZWQ6CiAgICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgZXh0ZXJuYWw6CiAgICAgICAgY2FGaWxlOiAiIgogICAgICAgIGNlcnRGaWxlOiAiIgogICAgICAgIGNvbm5lY3RvcjogIiIKICAgICAgICBkYXRhU291cmNlOiAiIgogICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAga2V5RmlsZTogIiIKICAgIGV0Y2Q6CiAgICAgIGRlcGxveToKICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgIGhlYWRsZXNzU2VydmljZToKICAgICAgICAgIGFubm90YXRpb25zOiB7fQogICAgICAgIHNlcnZpY2U6CiAgICAgICAgICBhbm5vdGF0aW9uczoge30KICAgICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgICBzdGF0ZWZ1bFNldDoKICAgICAgICAgIGFubm90YXRpb25zOiB7fQogICAgICAgICAgZW5hYmxlU2VydmljZUxpbmtzOiB0cnVlCiAgICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgICBlbnY6IFtdCiAgICAgICAgICBleHRyYUFyZ3M6IFtdCiAgICAgICAgICBoaWdoQXZhaWxhYmlsaXR5OgogICAgICAgICAgICByZXBsaWNhczogMQogICAgICAgICAgaW1hZ2U6CiAgICAgICAgICAgIHJlZ2lzdHJ5OiByZWdpc3RyeS5rOHMuaW8KICAgICAgICAgICAgcmVwb3NpdG9yeTogZXRjZAogICAgICAgICAgICB0YWc6IDMuNS4xNy0wCiAgICAgICAgICBpbWFnZVB1bGxQb2xpY3k6ICIiCiAgICAgICAgICBsYWJlbHM6IHt9CiAgICAgICAgICBwZXJzaXN0ZW5jZToKICAgICAgICAgICAgYWRkVm9sdW1lTW91bnRzOiBbXQogICAgICAgICAgICBhZGRWb2x1bWVzOiBbXQogICAgICAgICAgICB2b2x1bWVDbGFpbToKICAgICAgICAgICAgICBhY2Nlc3NNb2RlczoKICAgICAgICAgICAgICAtIFJlYWRXcml0ZU9uY2UKICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgICAgICAgcmV0ZW50aW9uUG9saWN5OiBSZXRhaW4KICAgICAgICAgICAgICBzaXplOiA1R2kKICAgICAgICAgICAgICBzdG9yYWdlQ2xhc3M6ICIiCiAgICAgICAgICAgIHZvbHVtZUNsYWltVGVtcGxhdGVzOiBbXQogICAgICAgICAgcG9kczoKICAgICAgICAgICAgYW5ub3RhdGlvbnM6IHt9CiAgICAgICAgICAgIGxhYmVsczoge30KICAgICAgICAgIHJlc291cmNlczoKICAgICAgICAgICAgcmVxdWVzdHM6CiAgICAgICAgICAgICAgY3B1OiAyMG0KICAgICAgICAgICAgICBtZW1vcnk6IDE1ME1pCiAgICAgICAgICBzY2hlZHVsaW5nOgogICAgICAgICAgICBhZmZpbml0eToge30KICAgICAgICAgICAgbm9kZVNlbGVjdG9yOiB7fQogICAgICAgICAgICBwb2RNYW5hZ2VtZW50UG9saWN5OiBQYXJhbGxlbAogICAgICAgICAgICBwcmlvcml0eUNsYXNzTmFtZTogIiIKICAgICAgICAgICAgdG9sZXJhdGlvbnM6IFtdCiAgICAgICAgICAgIHRvcG9sb2d5U3ByZWFkQ29uc3RyYWludHM6IFtdCiAgICAgICAgICBzZWN1cml0eToKICAgICAgICAgICAgY29udGFpbmVyU2VjdXJpdHlDb250ZXh0OiB7fQogICAgICAgICAgICBwb2RTZWN1cml0eUNvbnRleHQ6IHt9CiAgICAgIGVtYmVkZGVkOgogICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgbWlncmF0ZUZyb21EZXBsb3llZEV0Y2Q6IGZhbHNlCiAgY29yZWRuczoKICAgIGRlcGxveW1lbnQ6CiAgICAgIGFmZmluaXR5OiB7fQogICAgICBhbm5vdGF0aW9uczoge30KICAgICAgaW1hZ2U6ICIiCiAgICAgIGxhYmVsczoge30KICAgICAgbm9kZVNlbGVjdG9yOiB7fQogICAgICBwb2RzOgogICAgICAgIGFubm90YXRpb25zOiB7fQogICAgICAgIGxhYmVsczoge30KICAgICAgcmVwbGljYXM6IDEKICAgICAgcmVzb3VyY2VzOgogICAgICAgIGxpbWl0czoKICAgICAgICAgIGNwdTogMTAwMG0KICAgICAgICAgIG1lbW9yeTogMTcwTWkKICAgICAgICByZXF1ZXN0czoKICAgICAgICAgIGNwdTogMjBtCiAgICAgICAgICBtZW1vcnk6IDY0TWkKICAgICAgdG9sZXJhdGlvbnM6IFtdCiAgICAgIHRvcG9sb2d5U3ByZWFkQ29uc3RyYWludHM6CiAgICAgIC0gbGFiZWxTZWxlY3RvcjoKICAgICAgICAgIG1hdGNoTGFiZWxzOgogICAgICAgICAgICBrOHMtYXBwOiB2Y2x1c3Rlci1rdWJlLWRucwogICAgICAgIG1heFNrZXc6IDEKICAgICAgICB0b3BvbG9neUtleToga3ViZXJuZXRlcy5pby9ob3N0bmFtZQogICAgICAgIHdoZW5VbnNhdGlzZmlhYmxlOiBEb05vdFNjaGVkdWxlCiAgICBlbWJlZGRlZDogZmFsc2UKICAgIGVuYWJsZWQ6IHRydWUKICAgIG92ZXJ3cml0ZUNvbmZpZzogIiIKICAgIG92ZXJ3cml0ZU1hbmlmZXN0czogIiIKICAgIHByaW9yaXR5Q2xhc3NOYW1lOiAiIgogICAgc2VydmljZToKICAgICAgYW5ub3RhdGlvbnM6IHt9CiAgICAgIGxhYmVsczoge30KICAgICAgc3BlYzoKICAgICAgICB0eXBlOiBDbHVzdGVySVAKICBkaXN0cm86CiAgICBrMHM6CiAgICAgIGNvbW1hbmQ6IFtdCiAgICAgIGNvbmZpZzogIiIKICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgZXh0cmFBcmdzOiBbXQogICAgICBpbWFnZToKICAgICAgICByZWdpc3RyeTogZG9ja2VyLmlvCiAgICAgICAgcmVwb3NpdG9yeTogazBzcHJvamVjdC9rMHMKICAgICAgICB0YWc6IHYxLjMyLjgtazBzLjAKICAgICAgaW1hZ2VQdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICAgICAgcmVzb3VyY2VzOgogICAgICAgIGxpbWl0czoKICAgICAgICAgIG1lbW9yeTogMjU2TWkKICAgICAgICByZXF1ZXN0czoKICAgICAgICAgIGNwdTogNTBtCiAgICAgICAgICBtZW1vcnk6IDY0TWkKICAgICAgc2VjdXJpdHlDb250ZXh0OiB7fQogICAgazNzOgogICAgICBjb21tYW5kOiBbXQogICAgICBlbmFibGVkOiB0cnVlCiAgICAgIGV4dHJhQXJnczogW10KICAgICAgaW1hZ2U6CiAgICAgICAgcmVnaXN0cnk6IGRvY2tlci5pbwogICAgICAgIHJlcG9zaXRvcnk6IHJhbmNoZXIvazNzCiAgICAgICAgdGFnOiB2MS4zMi44LWszczEKICAgICAgaW1hZ2VQdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICAgICAgcmVzb3VyY2VzOgogICAgICAgIGxpbWl0czoKICAgICAgICAgIG1lbW9yeTogMjU2TWkKICAgICAgICByZXF1ZXN0czoKICAgICAgICAgIGNwdTogNTBtCiAgICAgICAgICBtZW1vcnk6IDY0TWkKICAgICAgc2VjdXJpdHlDb250ZXh0OiB7fQogICAgazhzOgogICAgICBhcGlTZXJ2ZXI6CiAgICAgICAgY29tbWFuZDogW10KICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgZXh0cmFBcmdzOiBbXQogICAgICAgIGltYWdlOgogICAgICAgICAgcmVnaXN0cnk6IHJlZ2lzdHJ5Lms4cy5pbwogICAgICAgICAgcmVwb3NpdG9yeToga3ViZS1hcGlzZXJ2ZXIKICAgICAgICAgIHRhZzogdjEuMzIuOQogICAgICAgIGltYWdlUHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgICAgIGNvbnRyb2xsZXJNYW5hZ2VyOgogICAgICAgIGNvbW1hbmQ6IFtdCiAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICAgIGV4dHJhQXJnczogW10KICAgICAgICBpbWFnZToKICAgICAgICAgIHJlZ2lzdHJ5OiByZWdpc3RyeS5rOHMuaW8KICAgICAgICAgIHJlcG9zaXRvcnk6IGt1YmUtY29udHJvbGxlci1tYW5hZ2VyCiAgICAgICAgICB0YWc6IHYxLjMyLjkKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogICAgICBlbmFibGVkOiBmYWxzZQogICAgICBlbnY6IFtdCiAgICAgIHJlc291cmNlczoKICAgICAgICBsaW1pdHM6CiAgICAgICAgICBtZW1vcnk6IDI1Nk1pCiAgICAgICAgcmVxdWVzdHM6CiAgICAgICAgICBjcHU6IDUwbQogICAgICAgICAgbWVtb3J5OiA2NE1pCiAgICAgIHNjaGVkdWxlcjoKICAgICAgICBjb21tYW5kOiBbXQogICAgICAgIGV4dHJhQXJnczogW10KICAgICAgICBpbWFnZToKICAgICAgICAgIHJlZ2lzdHJ5OiByZWdpc3RyeS5rOHMuaW8KICAgICAgICAgIHJlcG9zaXRvcnk6IGt1YmUtc2NoZWR1bGVyCiAgICAgICAgICB0YWc6IHYxLjM0LjEKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogICAgICBzZWN1cml0eUNvbnRleHQ6IHt9CiAgICAgIHZlcnNpb246ICIiCiAgaW5ncmVzczoKICAgIGFubm90YXRpb25zOgogICAgICBuZ2lueC5pbmdyZXNzLmt1YmVybmV0ZXMuaW8vYmFja2VuZC1wcm90b2NvbDogSFRUUFMKICAgICAgbmdpbnguaW5ncmVzcy5rdWJlcm5ldGVzLmlvL3NzbC1wYXNzdGhyb3VnaDogInRydWUiCiAgICAgIG5naW54LmluZ3Jlc3Mua3ViZXJuZXRlcy5pby9zc2wtcmVkaXJlY3Q6ICJ0cnVlIgogICAgZW5hYmxlZDogdHJ1ZQogICAgaG9zdDogYXBpLm15Y2x1c3Rlci5sb2NhbAogICAgbGFiZWxzOiB7fQogICAgcGF0aFR5cGU6IEltcGxlbWVudGF0aW9uU3BlY2lmaWMKICAgIHNwZWM6CiAgICAgIHRsczogW10KICBwcm94eToKICAgIGJpbmRBZGRyZXNzOiAwLjAuMC4wCiAgICBleHRyYVNBTnM6IFtdCiAgICBwb3J0OiA4NDQzCiAgc2VydmljZToKICAgIGFubm90YXRpb25zOiB7fQogICAgZW5hYmxlZDogdHJ1ZQogICAgaHR0cHNOb2RlUG9ydDogMAogICAga3ViZWxldE5vZGVQb3J0OiAwCiAgICBsYWJlbHM6IHt9CiAgICBzcGVjOgogICAgICB0eXBlOiBDbHVzdGVySVAKICBzZXJ2aWNlTW9uaXRvcjoKICAgIGFubm90YXRpb25zOiB7fQogICAgZW5hYmxlZDogZmFsc2UKICAgIGxhYmVsczoge30KICBzdGF0ZWZ1bFNldDoKICAgIGFubm90YXRpb25zOiB7fQogICAgYXJnczogW10KICAgIGNvbW1hbmQ6IFtdCiAgICBlbmFibGVTZXJ2aWNlTGlua3M6IHRydWUKICAgIGVudjogW10KICAgIGhpZ2hBdmFpbGFiaWxpdHk6CiAgICAgIGxlYXNlRHVyYXRpb246IDYwCiAgICAgIHJlbmV3RGVhZGxpbmU6IDQwCiAgICAgIHJlcGxpY2FzOiAxCiAgICAgIHJldHJ5UGVyaW9kOiAxNQogICAgaW1hZ2U6CiAgICAgIHJlZ2lzdHJ5OiBnaGNyLmlvCiAgICAgIHJlcG9zaXRvcnk6IGxvZnQtc2gvdmNsdXN0ZXItcHJvCiAgICAgIHRhZzogMC4yNC4wCiAgICBpbWFnZVB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogICAgbGFiZWxzOiB7fQogICAgcGVyc2lzdGVuY2U6CiAgICAgIGFkZFZvbHVtZU1vdW50czogW10KICAgICAgYWRkVm9sdW1lczogW10KICAgICAgYmluYXJpZXNWb2x1bWU6CiAgICAgIC0gZW1wdHlEaXI6IHt9CiAgICAgICAgbmFtZTogYmluYXJpZXMKICAgICAgZGF0YVZvbHVtZTogW10KICAgICAgdm9sdW1lQ2xhaW06CiAgICAgICAgYWNjZXNzTW9kZXM6CiAgICAgICAgLSBSZWFkV3JpdGVPbmNlCiAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICAgIHJldGVudGlvblBvbGljeTogUmV0YWluCiAgICAgICAgc2l6ZTogNUdpCiAgICAgICAgc3RvcmFnZUNsYXNzOiAiIgogICAgICB2b2x1bWVDbGFpbVRlbXBsYXRlczogW10KICAgIHBvZHM6CiAgICAgIGFubm90YXRpb25zOiB7fQogICAgICBsYWJlbHM6IHt9CiAgICBwcm9iZXM6CiAgICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICByZWFkaW5lc3NQcm9iZToKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgIHN0YXJ0dXBQcm9iZToKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICByZXNvdXJjZXM6CiAgICAgIGxpbWl0czoKICAgICAgICBtZW1vcnk6IDJHaQogICAgICByZXF1ZXN0czoKICAgICAgICBjcHU6IDUwbQogICAgICAgIG1lbW9yeTogNTEyTWkKICAgIHNjaGVkdWxpbmc6CiAgICAgIGFmZmluaXR5OiB7fQogICAgICBub2RlU2VsZWN0b3I6IHt9CiAgICAgIHBvZE1hbmFnZW1lbnRQb2xpY3k6IFBhcmFsbGVsCiAgICAgIHByaW9yaXR5Q2xhc3NOYW1lOiAiIgogICAgICB0b2xlcmF0aW9uczogW10KICAgICAgdG9wb2xvZ3lTcHJlYWRDb25zdHJhaW50czogW10KICAgIHNlY3VyaXR5OgogICAgICBjb250YWluZXJTZWN1cml0eUNvbnRleHQ6CiAgICAgICAgYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uOiBmYWxzZQogICAgICBwb2RTZWN1cml0eUNvbnRleHQ6IHt9CiAgICB3b3JraW5nRGlyOiAiIgpleHBlcmltZW50YWw6CiAgZGVwbG95OgogICAgaG9zdDoKICAgICAgbWFuaWZlc3RzOiAiIgogICAgICBtYW5pZmVzdHNUZW1wbGF0ZTogIiIKICAgIHZjbHVzdGVyOgogICAgICBoZWxtOiBbXQogICAgICBtYW5pZmVzdHM6ICIiCiAgICAgIG1hbmlmZXN0c1RlbXBsYXRlOiAiIgogIGdlbmVyaWNTeW5jOgogICAgY2x1c3RlclJvbGU6CiAgICAgIGV4dHJhUnVsZXM6IFtdCiAgICByb2xlOgogICAgICBleHRyYVJ1bGVzOiBbXQogIGlzb2xhdGVkQ29udHJvbFBsYW5lOgogICAgaGVhZGxlc3M6IGZhbHNlCiAgbXVsdGlOYW1lc3BhY2VNb2RlOgogICAgZW5hYmxlZDogZmFsc2UKICByZXVzZU5hbWVzcGFjZTogZmFsc2UKICBzeW5jU2V0dGluZ3M6CiAgICBkaXNhYmxlU3luYzogZmFsc2UKICAgIHJld3JpdGVLdWJlcm5ldGVzU2VydmljZTogZmFsc2UKICAgIHNldE93bmVyOiB0cnVlCiAgICB0YXJnZXROYW1lc3BhY2U6ICIiCmV4cG9ydEt1YmVDb25maWc6CiAgY29udGV4dDogIiIKICBpbnNlY3VyZTogZmFsc2UKICBzZWNyZXQ6CiAgICBuYW1lOiAiIgogICAgbmFtZXNwYWNlOiAiIgogIHNlcnZlcjogIiIKICBzZXJ2aWNlQWNjb3VudDoKICAgIGNsdXN0ZXJSb2xlOiAiIgogICAgbmFtZTogIiIKICAgIG5hbWVzcGFjZTogIiIKZXh0ZXJuYWw6IHt9CmludGVncmF0aW9uczoKICBjZXJ0TWFuYWdlcjoKICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBzeW5jOgogICAgICBmcm9tSG9zdDoKICAgICAgICBjbHVzdGVySXNzdWVyczoKICAgICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgICAgIHNlbGVjdG9yOgogICAgICAgICAgICBsYWJlbHM6IHt9CiAgICAgIHRvSG9zdDoKICAgICAgICBjZXJ0aWZpY2F0ZXM6CiAgICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgaXNzdWVyczoKICAgICAgICAgIGVuYWJsZWQ6IHRydWUKICBleHRlcm5hbFNlY3JldHM6CiAgICBlbmFibGVkOiBmYWxzZQogICAgc3luYzoKICAgICAgY2x1c3RlclN0b3JlczoKICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgIHNlbGVjdG9yOgogICAgICAgICAgbGFiZWxzOiB7fQogICAgICBleHRlcm5hbFNlY3JldHM6CiAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICBzdG9yZXM6CiAgICAgICAgZW5hYmxlZDogZmFsc2UKICAgIHdlYmhvb2s6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAga3ViZVZpcnQ6CiAgICBlbmFibGVkOiBmYWxzZQogICAgc3luYzoKICAgICAgZGF0YVZvbHVtZXM6CiAgICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgdmlydHVhbE1hY2hpbmVDbG9uZXM6CiAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICB2aXJ0dWFsTWFjaGluZUluc3RhbmNlTWlncmF0aW9uczoKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgIHZpcnR1YWxNYWNoaW5lSW5zdGFuY2VzOgogICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgdmlydHVhbE1hY2hpbmVQb29sczoKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgIHZpcnR1YWxNYWNoaW5lczoKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICB3ZWJob29rOgogICAgICBlbmFibGVkOiB0cnVlCiAgbWV0cmljc1NlcnZlcjoKICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBub2RlczogdHJ1ZQogICAgcG9kczogdHJ1ZQpuZXR3b3JraW5nOgogIGFkdmFuY2VkOgogICAgY2x1c3RlckRvbWFpbjogY2x1c3Rlci5sb2NhbAogICAgZmFsbGJhY2tIb3N0Q2x1c3RlcjogZmFsc2UKICAgIHByb3h5S3ViZWxldHM6CiAgICAgIGJ5SG9zdG5hbWU6IHRydWUKICAgICAgYnlJUDogdHJ1ZQogIHJlcGxpY2F0ZVNlcnZpY2VzOgogICAgZnJvbUhvc3Q6IFtdCiAgICB0b0hvc3Q6IFtdCiAgcmVzb2x2ZUROUzogW10KcGx1Z2luczoge30KcG9saWNpZXM6CiAgY2VudHJhbEFkbWlzc2lvbjoKICAgIG11dGF0aW5nV2ViaG9va3M6IFtdCiAgICB2YWxpZGF0aW5nV2ViaG9va3M6IFtdCiAgbGltaXRSYW5nZToKICAgIGFubm90YXRpb25zOiB7fQogICAgZGVmYXVsdDoKICAgICAgY3B1OiAiMSIKICAgICAgZXBoZW1lcmFsLXN0b3JhZ2U6IDhHaQogICAgICBtZW1vcnk6IDUxMk1pCiAgICBkZWZhdWx0UmVxdWVzdDoKICAgICAgY3B1OiAxMDBtCiAgICAgIGVwaGVtZXJhbC1zdG9yYWdlOiAzR2kKICAgICAgbWVtb3J5OiAxMjhNaQogICAgZW5hYmxlZDogYXV0bwogICAgbGFiZWxzOiB7fQogICAgbWF4OiB7fQogICAgbWluOiB7fQogIG5ldHdvcmtQb2xpY3k6CiAgICBhbm5vdGF0aW9uczoge30KICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBmYWxsYmFja0RuczogOC44LjguOAogICAgbGFiZWxzOiB7fQogICAgb3V0Z29pbmdDb25uZWN0aW9uczoKICAgICAgaXBCbG9jazoKICAgICAgICBjaWRyOiAwLjAuMC4wLzAKICAgICAgICBleGNlcHQ6CiAgICAgICAgLSAxMDAuNjQuMC4wLzEwCiAgICAgICAgLSAxMjcuMC4wLjAvOAogICAgICAgIC0gMTAuMC4wLjAvOAogICAgICAgIC0gMTcyLjE2LjAuMC8xMgogICAgICAgIC0gMTkyLjE2OC4wLjAvMTYKICAgICAgcGxhdGZvcm06IHRydWUKICByZXNvdXJjZVF1b3RhOgogICAgYW5ub3RhdGlvbnM6IHt9CiAgICBlbmFibGVkOiBhdXRvCiAgICBsYWJlbHM6IHt9CiAgICBxdW90YToKICAgICAgY291bnQvY29uZmlnbWFwczogMTAwCiAgICAgIGNvdW50L2VuZHBvaW50czogNDAKICAgICAgY291bnQvcGVyc2lzdGVudHZvbHVtZWNsYWltczogMjAKICAgICAgY291bnQvcG9kczogMjAKICAgICAgY291bnQvc2VjcmV0czogMTAwCiAgICAgIGNvdW50L3NlcnZpY2VzOiAyMAogICAgICBsaW1pdHMuY3B1OiAyMAogICAgICBsaW1pdHMuZXBoZW1lcmFsLXN0b3JhZ2U6IDE2MEdpCiAgICAgIGxpbWl0cy5tZW1vcnk6IDQwR2kKICAgICAgcmVxdWVzdHMuY3B1OiAxMAogICAgICByZXF1ZXN0cy5lcGhlbWVyYWwtc3RvcmFnZTogNjBHaQogICAgICByZXF1ZXN0cy5tZW1vcnk6IDIwR2kKICAgICAgcmVxdWVzdHMuc3RvcmFnZTogMTAwR2kKICAgICAgc2VydmljZXMubG9hZGJhbGFuY2VyczogMQogICAgICBzZXJ2aWNlcy5ub2RlcG9ydHM6IDAKICAgIHNjb3BlU2VsZWN0b3I6CiAgICAgIG1hdGNoRXhwcmVzc2lvbnM6IFtdCiAgICBzY29wZXM6IFtdCnJiYWM6CiAgY2x1c3RlclJvbGU6CiAgICBlbmFibGVkOiBhdXRvCiAgICBleHRyYVJ1bGVzOiBbXQogICAgb3ZlcndyaXRlUnVsZXM6IFtdCiAgcm9sZToKICAgIGVuYWJsZWQ6IHRydWUKICAgIGV4dHJhUnVsZXM6IFtdCiAgICBvdmVyd3JpdGVSdWxlczoKICAgIC0gYXBpR3JvdXBzOgogICAgICAtICIiCiAgICAgIHJlc291cmNlczoKICAgICAgLSBjb25maWdtYXBzCiAgICAgIC0gc2VjcmV0cwogICAgICAtIHNlcnZpY2VzCiAgICAgIC0gcG9kcwogICAgICAtIHBvZHMvYXR0YWNoCiAgICAgIC0gcG9kcy9wb3J0Zm9yd2FyZAogICAgICAtIHBvZHMvZXhlYwogICAgICAtIHBlcnNpc3RlbnR2b2x1bWVjbGFpbXMKICAgICAgdmVyYnM6CiAgICAgIC0gY3JlYXRlCiAgICAgIC0gZGVsZXRlCiAgICAgIC0gcGF0Y2gKICAgICAgLSB1cGRhdGUKICAgICAgLSBnZXQKICAgICAgLSBsaXN0CiAgICAgIC0gd2F0Y2gKICAgIC0gYXBpR3JvdXBzOgogICAgICAtIGFwcHMKICAgICAgcmVzb3VyY2VzOgogICAgICAtIHN0YXRlZnVsc2V0cwogICAgICAtIHJlcGxpY2FzZXRzCiAgICAgIC0gZGVwbG95bWVudHMKICAgICAgdmVyYnM6CiAgICAgIC0gZ2V0CiAgICAgIC0gbGlzdAogICAgICAtIHdhdGNoCiAgICAtIGFwaUdyb3VwczoKICAgICAgLSAiIgogICAgICByZXNvdXJjZXM6CiAgICAgIC0gZW5kcG9pbnRzCiAgICAgIHZlcmJzOgogICAgICAtIGNyZWF0ZQogICAgICAtIGRlbGV0ZQogICAgICAtIHBhdGNoCiAgICAgIC0gdXBkYXRlCiAgICAtIGFwaUdyb3VwczoKICAgICAgLSAiIgogICAgICByZXNvdXJjZXM6CiAgICAgIC0gZW5kcG9pbnRzCiAgICAgIC0gZXZlbnRzCiAgICAgIC0gcG9kcy9sb2cKICAgICAgdmVyYnM6CiAgICAgIC0gZ2V0CiAgICAgIC0gbGlzdAogICAgICAtIHdhdGNoCiAgICAtIGFwaUdyb3VwczoKICAgICAgLSBuZXR3b3JraW5nLms4cy5pbwogICAgICByZXNvdXJjZXM6CiAgICAgIC0gaW5ncmVzc2VzCiAgICAgIHZlcmJzOgogICAgICAtIGNyZWF0ZQogICAgICAtIGRlbGV0ZQogICAgICAtIHBhdGNoCiAgICAgIC0gdXBkYXRlCiAgICAgIC0gZ2V0CiAgICAgIC0gbGlzdAogICAgICAtIHdhdGNoCnN5bmM6CiAgZnJvbUhvc3Q6CiAgICBjb25maWdNYXBzOgogICAgICBlbmFibGVkOiBmYWxzZQogICAgICBtYXBwaW5nczoKICAgICAgICBieU5hbWU6IHt9CiAgICBjc2lEcml2ZXJzOgogICAgICBlbmFibGVkOiBhdXRvCiAgICBjc2lOb2RlczoKICAgICAgZW5hYmxlZDogYXV0bwogICAgY3NpU3RvcmFnZUNhcGFjaXRpZXM6CiAgICAgIGVuYWJsZWQ6IGF1dG8KICAgIGV2ZW50czoKICAgICAgZW5hYmxlZDogdHJ1ZQogICAgaW5ncmVzc0NsYXNzZXM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBub2RlczoKICAgICAgY2xlYXJJbWFnZVN0YXR1czogZmFsc2UKICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgc2VsZWN0b3I6CiAgICAgICAgYWxsOiBmYWxzZQogICAgICAgIGxhYmVsczoge30KICAgICAgc3luY0JhY2tDaGFuZ2VzOiBmYWxzZQogICAgcHJpb3JpdHlDbGFzc2VzOgogICAgICBlbmFibGVkOiBmYWxzZQogICAgcnVudGltZUNsYXNzZXM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBzZWNyZXRzOgogICAgICBlbmFibGVkOiBmYWxzZQogICAgICBtYXBwaW5nczoKICAgICAgICBieU5hbWU6IHt9CiAgICBzdG9yYWdlQ2xhc3NlczoKICAgICAgZW5hYmxlZDogYXV0bwogICAgdm9sdW1lU25hcHNob3RDbGFzc2VzOgogICAgICBlbmFibGVkOiBmYWxzZQogIHRvSG9zdDoKICAgIGNvbmZpZ01hcHM6CiAgICAgIGFsbDogZmFsc2UKICAgICAgZW5hYmxlZDogdHJ1ZQogICAgZW5kcG9pbnRzOgogICAgICBlbmFibGVkOiB0cnVlCiAgICBpbmdyZXNzZXM6CiAgICAgIGVuYWJsZWQ6IHRydWUKICAgIG5ldHdvcmtQb2xpY2llczoKICAgICAgZW5hYmxlZDogZmFsc2UKICAgIHBlcnNpc3RlbnRWb2x1bWVDbGFpbXM6CiAgICAgIGVuYWJsZWQ6IHRydWUKICAgIHBlcnNpc3RlbnRWb2x1bWVzOgogICAgICBlbmFibGVkOiBmYWxzZQogICAgcG9kRGlzcnVwdGlvbkJ1ZGdldHM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBwb2RzOgogICAgICBlbmFibGVkOiB0cnVlCiAgICAgIGVuZm9yY2VUb2xlcmF0aW9uczogW10KICAgICAgcHJpb3JpdHlDbGFzc05hbWU6ICIiCiAgICAgIHJld3JpdGVIb3N0czoKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgaW5pdENvbnRhaW5lcjoKICAgICAgICAgIGltYWdlOiBsaWJyYXJ5L2FscGluZTozLjIwCiAgICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICAgIGxpbWl0czoKICAgICAgICAgICAgICBjcHU6IDMwbQogICAgICAgICAgICAgIG1lbW9yeTogNjRNaQogICAgICAgICAgICByZXF1ZXN0czoKICAgICAgICAgICAgICBjcHU6IDMwbQogICAgICAgICAgICAgIG1lbW9yeTogNjRNaQogICAgICBydW50aW1lQ2xhc3NOYW1lOiAiIgogICAgICB0cmFuc2xhdGVJbWFnZToge30KICAgICAgdXNlU2VjcmV0c0ZvclNBVG9rZW5zOiBmYWxzZQogICAgcHJpb3JpdHlDbGFzc2VzOgogICAgICBlbmFibGVkOiBmYWxzZQogICAgc2VjcmV0czoKICAgICAgYWxsOiBmYWxzZQogICAgICBlbmFibGVkOiB0cnVlCiAgICBzZXJ2aWNlQWNjb3VudHM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICBzZXJ2aWNlczoKICAgICAgZW5hYmxlZDogdHJ1ZQogICAgc3RvcmFnZUNsYXNzZXM6CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICB2b2x1bWVTbmFwc2hvdENvbnRlbnRzOgogICAgICBlbmFibGVkOiBmYWxzZQogICAgdm9sdW1lU25hcHNob3RzOgogICAgICBlbmFibGVkOiBmYWxzZQp0ZWxlbWV0cnk6CiAgZW5hYmxlZDogZmFsc2U=
kind: Secret
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-config-c-green-test-1234
  namespace: target-namespace
type: Opaque
---
apiVersion: v1
data:
  coredns.yaml: "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n\
    \  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind:\
    \ ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n\
    \  name: system:coredns\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n\
    \      - endpoints\n      - services\n      - pods\n      - namespaces\n    verbs:\n\
    \      - list\n      - watch\n  - apiGroups:\n      - discovery.k8s.io\n    resources:\n\
    \      - endpointslices\n    verbs:\n      - list\n      - watch\n---\napiVersion:\
    \ rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n\
    \    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping:\
    \ rbac-defaults\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n\
    \  kind: ClusterRole\n  name: system:coredns\nsubjects:\n  - kind: ServiceAccount\n\
    \    name: coredns\n    namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\n\
    metadata:\n  name: coredns\n  namespace: kube-system\ndata:\n  Corefile: |-\n\
    \    .:1053 {\n        errors\n        health\n        ready\n        rewrite\
    \ name regex .*\\.nodes\\.vcluster\\.com kubernetes.default.svc.cluster.local\n\
    \        kubernetes cluster.local in-addr.arpa ip6.arpa {\n            pods insecure\n\
    \            fallthrough in-addr.arpa ip6.arpa\n        }\n        hosts /etc/NodeHosts\
    \ {\n            ttl 60\n            reload 15s\n            fallthrough\n   \
    \     }\n        prometheus :9153\n        forward . /etc/resolv.conf\n      \
    \  cache 30\n        loop\n        loadbalance\n    }\n  \n    import /etc/coredns/custom/*.server\n\
    \  NodeHosts: \"\"\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name:\
    \ coredns\n  namespace: kube-system\n  labels:\n    k8s-app: vcluster-kube-dns\n\
    \    kubernetes.io/name: \"CoreDNS\"\nspec:\n  replicas: 1\n  strategy:\n    type:\
    \ RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n  \
    \  matchLabels:\n      k8s-app: vcluster-kube-dns\n  template:\n    metadata:\n\
    \      labels:\n        k8s-app: vcluster-kube-dns\n    spec:\n      priorityClassName:\
    \ \"\"\n      serviceAccountName: coredns\n      nodeSelector:\n        kubernetes.io/os:\
    \ linux\n      topologySpreadConstraints:\n        - labelSelector:\n        \
    \    matchLabels:\n              k8s-app: vcluster-kube-dns\n          maxSkew:\
    \ 1\n          topologyKey: kubernetes.io/hostname\n          whenUnsatisfiable:\
    \ DoNotSchedule\n      containers:\n        - name: coredns\n          image:\
    \ {{.IMAGE}}\n          imagePullPolicy: IfNotPresent\n          resources:\n\
    \            limits:\n              cpu: 1000m\n              memory: 170Mi\n\
    \            requests:\n              cpu: 20m\n              memory: 64Mi\n \
    \         args: [ \"-conf\", \"/etc/coredns/Corefile\" ]\n          volumeMounts:\n\
    \            - name: config-volume\n              mountPath: /etc/coredns\n  \
    \            readOnly: true\n            - name: custom-config-volume\n      \
    \        mountPath: /etc/coredns/custom\n              readOnly: true\n      \
    \    securityContext:\n            runAsNonRoot: true\n            runAsUser:\
    \ {{.RUN_AS_USER}}\n            runAsGroup: {{.RUN_AS_GROUP}}\n            allowPrivilegeEscalation:\
    \ false\n            capabilities:\n              add:\n                - NET_BIND_SERVICE\n\
    \              drop:\n                - ALL\n            readOnlyRootFilesystem:\
    \ true\n          livenessProbe:\n            httpGet:\n              path: /health\n\
    \              port: 8080\n              scheme: HTTP\n            initialDelaySeconds:\
    \ 60\n            periodSeconds: 10\n            timeoutSeconds: 1\n         \
    \   successThreshold: 1\n            failureThreshold: 3\n          readinessProbe:\n\
    \            httpGet:\n              path: /ready\n              port: 8181\n\
    \              scheme: HTTP\n            initialDelaySeconds: 0\n            periodSeconds:\
    \ 2\n            timeoutSeconds: 1\n            successThreshold: 1\n        \
    \    failureThreshold: 3\n      dnsPolicy: Default\n      volumes:\n        -\
    \ name: config-volume\n          configMap:\n            name: coredns\n     \
    \       items:\n              - key: Corefile\n                path: Corefile\n\
    \              - key: NodeHosts\n                path: NodeHosts\n        - name:\
    \ custom-config-volume\n          configMap:\n            name: coredns-custom\n\
    \            optional: true\n---\napiVersion: v1\nkind: Service\nmetadata:\n \
    \ name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io/port:\
    \ \"9153\"\n    prometheus.io/scrape: \"true\"\n  labels:\n    k8s-app: vcluster-kube-dns\n\
    \    kubernetes.io/cluster-service: \"true\"\n    kubernetes.io/name: \"CoreDNS\"\
    \nspec:\n  type: ClusterIP\n  selector:\n    k8s-app: vcluster-kube-dns\n  ports:\n\
    \    - name: dns\n      port: 53\n      targetPort: 1053\n      protocol: UDP\n\
    \    - name: dns-tcp\n      port: 53\n      targetPort: 1053\n      protocol:\
    \ TCP\n    - name: metrics\n      port: 9153\n      protocol: TCP"
kind: ConfigMap
metadata:
  name: vc-coredns-c-green-test-1234
  namespace: target-namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-c-green-test-1234
  namespace: target-namespace
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
      - secrets
      - services
      - pods
      - pods/attach
      - pods/portforward
      - pods/exec
      - persistentvolumeclaims
    verbs:
      - create
      - delete
      - patch
      - update
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - replicasets
      - deployments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - endpoints
    verbs:
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - ''
    resources:
      - endpoints
      - events
      - pods/log
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - patch
      - update
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: vc-c-green-test-1234
  namespace: target-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vc-c-green-test-1234
subjects:
  - kind: ServiceAccount
    name: vc-c-green-test-1234
    namespace: target-namespace
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: c-green-test-1234-headless
  namespace: target-namespace
spec:
  clusterIP: None
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
  publishNotReadyAddresses: true
  selector:
    app: vcluster
    release: c-green-test-1234
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
    vcluster.loft.sh/service: 'true'
  name: c-green-test-1234
  namespace: target-namespace
spec:
  ports:
    - name: https
      nodePort: 0
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: kubelet
      nodePort: 0
      port: 10250
      protocol: TCP
      targetPort: 8443
  selector:
    app: vcluster
    release: c-green-test-1234
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: c-green-test-1234
  namespace: target-namespace
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: vcluster
      release: c-green-test-1234
  serviceName: c-green-test-1234-headless
  template:
    metadata:
      annotations:
        vClusterConfigHash: 6ad020295d48d27abbbe86ccb0d7eefd401ba9ca413235d5c36f9c5cf433bef3
      labels:
        app: vcluster
        release: c-green-test-1234
    spec:
      containers:
        - env:
            - name: VCLUSTER_NAME
              value: c-green-test-1234
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: ghcr.io/loft-sh/vcluster-pro:0.24.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 2
            timeoutSeconds: 3
          name: syncer
          readinessProbe:
            failureThreshold: 60
            httpGet:
              path: /readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 50m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          startupProbe:
            failureThreshold: 300
            httpGet:
              path: /readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 6
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /binaries
              name: binaries
            - mountPath: /pki
              name: certs
            - mountPath: /.cache/helm
              name: helm-cache
            - mountPath: /etc/rancher
              name: k3s-config
            - mountPath: /var/vcluster
              name: vcluster-config
            - mountPath: /tmp
              name: tmp
            - mountPath: /manifests/coredns
              name: coredns
              readOnly: true
      enableServiceLinks: true
      initContainers:
        - args:
            - -c
            - cp /bin/k3s /binaries/k3s
          command:
            - /bin/sh
          image: docker.io/rancher/k3s:v1.32.8-k3s1
          imagePullPolicy: IfNotPresent
          name: vcluster
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext: {}
          volumeMounts:
            - mountPath: /binaries
              name: binaries
      serviceAccountName: vc-c-green-test-1234
      terminationGracePeriodSeconds: 10
      volumes:
        - emptyDir: {}
          name: helm-cache
        - emptyDir: {}
          name: binaries
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: certs
        - emptyDir: {}
          name: k3s-config
        - name: vcluster-config
          secret:
            secretName: vc-config-c-green-test-1234
        - configMap:
            name: vc-coredns-c-green-test-1234
          name: coredns
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
  labels:
    app: vcluster
    chart: vcluster-0.24.0
    heritage: Helm
    release: c-green-test-1234
  name: c-green-test-1234
  namespace: target-namespace
spec:
  rules:
    - host: api.mycluster.local
      http:
        paths:
          - backend:
              service:
                name: c-green-test-1234
                port:
                  name: https
            path: /
            pathType: ImplementationSpecific
  tls: []
